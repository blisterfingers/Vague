buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'forge'

repositories {
    maven { // the repo from which to get NEI and stuff
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
}
dependencies {
    compile('mcp.mobius.waila:Waila:1.5.11-RC2-NONEI_1.7.10') {
        exclude group: 'mcp.mobius.waila'
    }
    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.136:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.6.43:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.4.105:dev"
}

ext.configFile = file "build.properties"

configFile.withReader {
	def prop = new Properties()
	prop.load(it)
	project.ext.config = new ConfigSlurper().parse prop
}

version = config.mod_version
group= "villain.mc.vague" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "vague"

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    
    replaceIn "Reference.java"
    replace "@MOD_VERSION@", "${config.mod_version}"
}

processResources {
	// Replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs){
		include '*.info'
		
		// replace version and mcversion
		expand 'mod_version' : project.version, 'minecraft_version': project.config.minecraft_version
	}
	
	// Copy everything else, that's no the mcmod.info
	from(sourceSets.main.resources.srcDirs){
		exclude '**/*.info'
	}
}

task devJar(type: Jar, dependsOn: 'classes'){
	from(sourceSets.main.output){
		include '**'
	}
	
	extension = 'jar'
	classifier = 'dev'
}

artifacts {
	archives devJar
}